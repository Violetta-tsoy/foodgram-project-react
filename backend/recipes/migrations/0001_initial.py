# Generated by Django 3.2 on 2023-06-04 06:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранные рецепты',
                'abstract': False,
                'default_related_name': 'favorites',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название ингредиента')),
                ('measurement_unit', models.CharField(help_text='Введите единицу измерения ингредиента.', max_length=200, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='IngredientRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название', max_length=200, verbose_name='Название')),
                ('amount', models.PositiveSmallIntegerField(help_text='Введите количество ингредиентов', validators=[django.core.validators.MinValueValidator(1, message='Укажите количество больше либо равное 1')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецепте',
                'verbose_name_plural': 'Ингредиенты в рецепте',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название рецепта', max_length=200)),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Введите дату публикации рецепта', verbose_name='Дата публикации')),
                ('text', models.TextField(help_text='Введите описание приготовления блюда', verbose_name='Описание приготовления блюда')),
                ('image', models.ImageField(upload_to='recipes/images/', verbose_name='Картинка')),
                ('cooking_time', models.IntegerField(help_text='Введите время приготовления блюда в минутах', validators=[django.core.validators.MinValueValidator(1, message='Укажите время больше либо равное 1')], verbose_name='Время приготовления (в минутах)')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Тег')),
                ('color', models.CharField(help_text='Введите цвет в RGB-формате (#rrggbb)', max_length=7, unique=True, validators=[django.core.validators.RegexValidator('^#[a-fA-F0-9]{6}$', 'Используйте RGB-формат для указания цвета (#AABBCC)')])),
                ('slug', models.SlugField(help_text='Введите название slug', max_length=200, unique=True, verbose_name='Название slug')),
            ],
            options={
                'verbose_name_plural': 'Теги',
                'ordering': ('id',),
                'default_related_name': 'tags',
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to='recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Рецепт в списке покупок',
                'verbose_name_plural': 'Рецепты в списке покупок',
                'abstract': False,
                'default_related_name': 'shopping_list',
            },
        ),
    ]
